{"version":3,"file":"index.js","sources":["../../../../src/pages/options/Options.tsx","../../../../src/pages/options/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Browser from 'webextension-polyfill';\n\ninterface Settings {\n  theme: 'light' | 'dark' | 'system';\n  autoSync: boolean;\n  syncInterval: number;\n  githubToken?: string;\n}\n\nconst defaultSettings: Settings = {\n  theme: 'system',\n  autoSync: true,\n  syncInterval: 30,\n};\n\nconst Options: React.FC = () => {\n  const [settings, setSettings] = useState<Settings>(defaultSettings);\n  const [saving, setSaving] = useState(false);\n  const [saved, setSaved] = useState(false);\n\n  useEffect(() => {\n    const loadSettings = async () => {\n      try {\n        const result = await Browser.storage.local.get('settings');\n        if (result.settings) {\n          setSettings(result.settings);\n        }\n      } catch (error) {\n        console.error('Failed to load settings:', error);\n      }\n    };\n\n    loadSettings();\n  }, []);\n\n  const handleSave = async () => {\n    setSaving(true);\n    try {\n      await Browser.storage.local.set({ settings });\n      setSaved(true);\n      setTimeout(() => setSaved(false), 2000);\n    } catch (error) {\n      console.error('Failed to save settings:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 max-w-2xl\">\n      <h1 className=\"text-3xl font-bold mb-8 text-gray-900 dark:text-white\">\n        Prompetize Settings\n      </h1>\n\n      <div className=\"space-y-6\">\n        {/* Theme Selection */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow\">\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\n            Appearance\n          </h2>\n          <div className=\"space-y-2\">\n            <label className=\"block text-gray-700 dark:text-gray-300\">Theme</label>\n            <select\n              value={settings.theme}\n              onChange={(e) => setSettings({ ...settings, theme: e.target.value as Settings['theme'] })}\n              className=\"w-full p-2 border rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"light\">Light</option>\n              <option value=\"dark\">Dark</option>\n              <option value=\"system\">System</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Sync Settings */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow\">\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\n            Synchronization\n          </h2>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"autoSync\"\n                checked={settings.autoSync}\n                onChange={(e) => setSettings({ ...settings, autoSync: e.target.checked })}\n                className=\"h-4 w-4 text-blue-600\"\n              />\n              <label htmlFor=\"autoSync\" className=\"ml-2 text-gray-700 dark:text-gray-300\">\n                Enable automatic synchronization\n              </label>\n            </div>\n\n            {settings.autoSync && (\n              <div className=\"space-y-2\">\n                <label className=\"block text-gray-700 dark:text-gray-300\">\n                  Sync Interval (minutes)\n                </label>\n                <input\n                  type=\"number\"\n                  value={settings.syncInterval}\n                  onChange={(e) => setSettings({ ...settings, syncInterval: parseInt(e.target.value) })}\n                  min=\"5\"\n                  max=\"120\"\n                  className=\"w-full p-2 border rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                />\n              </div>\n            )}\n\n            <div className=\"space-y-2\">\n              <label className=\"block text-gray-700 dark:text-gray-300\">GitHub Token</label>\n              <input\n                type=\"password\"\n                value={settings.githubToken || ''}\n                onChange={(e) => setSettings({ ...settings, githubToken: e.target.value })}\n                placeholder=\"Enter your GitHub token\"\n                className=\"w-full p-2 border rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              />\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                Required for synchronizing your prompts with GitHub\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Save Button */}\n        <div className=\"flex items-center justify-end space-x-4\">\n          {saved && (\n            <span className=\"text-green-500 dark:text-green-400\">Settings saved!</span>\n          )}\n          <button\n            onClick={handleSave}\n            disabled={saving}\n            className={`px-4 py-2 rounded ${\n              saving\n                ? 'bg-gray-400 cursor-not-allowed'\n                : 'bg-blue-500 hover:bg-blue-600'\n            } text-white transition-colors`}\n          >\n            {saving ? 'Saving...' : 'Save Settings'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Options;","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport '@pages/options/index.css';\nimport '@assets/styles/tailwind.css';\nimport Options from '@pages/options/Options';\n\nfunction init() {\n  const rootContainer = document.querySelector(\"#__root\");\n  if (!rootContainer) throw new Error(\"Can't find Options root element\");\n  \n  const root = createRoot(rootContainer);\n  root.render(\n    <React.StrictMode>\n      <Options />\n    </React.StrictMode>\n  );\n}\n\ninit();"],"names":["defaultSettings","Options","settings","setSettings","useState","saving","setSaving","saved","setSaved","useEffect","result","Browser","error","handleSave","jsxs","jsx","e","init","rootContainer","createRoot","React"],"mappings":"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"}